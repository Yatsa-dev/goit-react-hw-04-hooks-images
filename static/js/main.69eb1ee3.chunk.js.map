{"version":3,"sources":["components/ImageGalleryItem/ImageGalleryItem.module.css","components/Modal/Modal.module.css","components/Container/Container.module.css","components/Searchbar/Searchbar.module.css","components/ImageGallery/ImageGallery.module.css","components/Button/Button.module.css","components/Spinner/Spinner.module.css","App.module.css","components/SearchForm/SearchForm.module.css","components/Service-api/service-api.js","components/Container/Container.js","components/SearchForm/SearchForm.js","components/Searchbar/Searchbar.js","components/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","components/Button/Button.js","components/Modal/Modal.js","components/Spinner/Spinner.js","App.js","index.js"],"names":["module","exports","fetchApi","query","page","a","searchParams","URLSearchParams","q","per_page","image_type","orientation","safesearch","url","axios","get","data","Container","children","className","s","container","SearchForm","onSubmit","useState","setQuery","event","preventDefault","trim","toast","error","type","button","buttonLabel","input","value","onChange","currentTarget","toLowerCase","placeholder","Searchbar","propTypes","PropTypes","func","ImageGalleryItem","webformatURL","tags","toggleModal","bigImage","src","alt","image","onClick","ImageGallery","map","el","id","largeImageURL","Button","modalRoot","document","querySelector","Modal","closeModal","modalImage","useEffect","window","addEventListener","handleKeyDown","removeEventListener","code","createPortal","Overlay","target","img","Spinner","spinner","color","height","width","Status","App","status","setStatus","setPage","imageArr","setImageArr","modalLargeImage","setModalLargeImage","showModal","setShowModal","then","hits","scrollTo","top","documentElement","scrollHeight","behavior","length","autoClose","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.69eb1ee3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem\":\"ImageGalleryItem_ImageGalleryItem__GhNQp\",\"image\":\"ImageGalleryItem_image__u0FE1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__3O5_k\",\"Modal\":\"Modal_Modal__1IU76\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__2-XnR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"Searchbar_Searchbar__rk15N\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImageGallery_ImageGallery__3AwWT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__3HZSl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"Spinner_spinner__12J7h\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__167Ei\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SearchForm\":\"SearchForm_SearchForm__HgP5g\",\"button\":\"SearchForm_button__LtKDF\",\"buttonLabel\":\"SearchForm_buttonLabel__eoK_C\",\"input\":\"SearchForm_input__2WL1q\"};","import axios from 'axios';\r\n\r\nconst BASE_URL = 'https://pixabay.com/api/';\r\nconst API_KEY = '23103282-e7d496618b624ef4484ab3d5c';\r\n\r\nconst fetchApi = async (query, page) => {\r\n        const searchParams = new URLSearchParams({\r\n        q: query,\r\n        page: page,\r\n        per_page: '12',\r\n        image_type: 'photo',\r\n        orientation: 'horizontal',\r\n        safesearch: 'true'\r\n    })\r\n    const url = `${BASE_URL}?key=${API_KEY}&${searchParams}`\r\n    const { data } = await axios.get(url);\r\n  return data;\r\n};\r\n\r\nexport default fetchApi;\r\n    \r\n\r\n ","import PropTypes from 'prop-types';\r\nimport s from './Container.module.css'\r\n\r\nexport default function Container ({children}){\r\n    return <div className={s.container}>{children}</div>\r\n}\r\nContainer.propTypes = {\r\n    children: PropTypes.array.isRequired,\r\n  };","import {useState} from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport { toast } from \"react-toastify\";\r\nimport s from './SearchForm.module.css'\r\n\r\nexport default function SearchForm ({onSubmit}) {\r\n   const[query, setQuery] = useState('');\r\n  \r\n   const handleQueryChange = event => {\r\n      setQuery(event.currentTarget.value.toLowerCase());\r\n    };\r\n   const handleSubmit = event => {\r\n        event.preventDefault();\r\n        if(query.trim() === ''){\r\n        toast.error('Sorry,input field is empty');\r\n        return;\r\n        }\r\n        setQuery('');\r\n        onSubmit(query)\r\n    };\r\n        return(\r\n            <form onSubmit={handleSubmit} className={s.SearchForm}>\r\n          <button type=\"submit\" className={s.button}>\r\n            <span className={s.buttonLabel}>Search</span>\r\n          </button>\r\n          <input\r\n            className={s.input}\r\n            value={query}\r\n            onChange={handleQueryChange}\r\n            type=\"text\"\r\n            placeholder=\"Search images and photos\"\r\n          />\r\n        </form>\r\n        )\r\n}\r\nSearchForm.propTypes = {\r\n  onSubmit: PropTypes.func,\r\n  onChange: PropTypes.string,\r\n};","import PropTypes from 'prop-types';\r\nimport s from './Searchbar.module.css'\r\nimport SearchForm from \"components/SearchForm\";\r\n\r\nexport default function Searchbar({onSubmit}){\r\n    return(\r\n        <header className={s.Searchbar}>\r\n            <SearchForm onSubmit={onSubmit}/>\r\n        </header> \r\n    )\r\n}\r\nSearchForm.propTypes = {\r\n    onSubmit: PropTypes.func,\r\n  };","import PropTypes from 'prop-types';\r\nimport s from './ImageGalleryItem.module.css';\r\n\r\nexport default function ImageGalleryItem ({ webformatURL, tags, toggleModal, bigImage }){\r\n    return (\r\n      <li className={s.ImageGalleryItem}>\r\n        <img\r\n          src={webformatURL}\r\n          alt={tags}\r\n          className={s.image}\r\n          onClick={() => {\r\n            toggleModal();\r\n            bigImage();\r\n          }}\r\n        />\r\n      </li>\r\n    );\r\n}\r\n\r\nImageGalleryItem.propTypes = {\r\n  webformatURL: PropTypes.string,\r\n  tags: PropTypes.string,\r\n  toggleModal: PropTypes.func,\r\n  bigImage: PropTypes.func,\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport ImageGalleryItem from '../ImageGalleryItem'\r\nimport s from './ImageGallery.module.css';\r\n\r\nexport default function ImageGallery({ data,toggleModal,bigImage }){\r\n    return (\r\n      <ul className={s.ImageGallery}>\r\n        {data.map(el => (\r\n          <ImageGalleryItem\r\n            key={el.id}\r\n            id={el.id}\r\n            webformatURL={el.webformatURL}\r\n            largeImageURL={el.largeImageURL}\r\n            tags={el.tags}\r\n            toggleModal={() => toggleModal()}\r\n            bigImage={() => bigImage(el.id, el.largeImageURL, el.tags)}\r\n          />\r\n        ))}\r\n      </ul>\r\n    );\r\n}\r\n\r\nImageGallery.propTypes = {\r\n  query: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number,\r\n      tags: PropTypes.string,\r\n      webformatURL: PropTypes.string,\r\n      largeImageURL: PropTypes.string,\r\n    }),\r\n  ),\r\n  bigImage: PropTypes.func,\r\n  toggleModal: PropTypes.func,\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport s from './Button.module.css';\r\n\r\nexport default function Button({ onClick }) {\r\n    return (\r\n      <button className={s.Button} type=\"button\" onClick={onClick}>\r\n        Load more\r\n      </button>\r\n    );\r\n}\r\n  Button.propTypes = {\r\n    onClick: PropTypes.func.isRequired,\r\n  };\r\n","import PropTypes from 'prop-types';\r\nimport { useEffect } from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport s from './Modal.module.css';\r\n\r\nconst modalRoot = document.querySelector('#modal-root');\r\n\r\nexport default function Modal ({closeModal,modalImage}){\r\n \r\n  useEffect(()=>{\r\n    window.addEventListener('keydown', handleKeyDown);\r\n    return () => window.removeEventListener('keydown', handleKeyDown);\r\n  })\r\n\r\n  const handleKeyDown = event => {\r\n    if (event.code === 'Escape') {\r\n      closeModal();\r\n    }\r\n  };\r\n\r\n  const backdropClick = event => {\r\n    if (event.target === event.currentTarget) {\r\n      closeModal();\r\n    }\r\n  };\r\n\r\n    return createPortal(\r\n      <div className={s.Overlay} onClick={backdropClick}>\r\n        <div className={s.Modal}>\r\n          <img key={modalImage.id} src={modalImage.img} alt={modalImage.tags} />\r\n        </div>\r\n      </div>,\r\n      modalRoot,\r\n    );\r\n}\r\n\r\nModal.propTypes = {\r\n  closeModal: PropTypes.func,\r\n  ModalImage: PropTypes.object,\r\n};\r\n\r\n","import Loader from 'react-loader-spinner';\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport s from './Spinner.module.css'\r\n\r\nexport default function Spinner() {\r\n    return (\r\n        <Loader className={s.spinner} type=\"MutatingDots\" color=\"#5da066\" height={100} width={100} />\r\n    );\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\n/* eslint-disable no-self-compare */\nimport { useState,useEffect } from 'react';\nimport { ToastContainer} from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport './App.module.css';\n\nimport fetchApi from 'components/Service-api';\nimport Container from 'components/Container';\nimport Searchbar from 'components/Searchbar';\nimport ImageGallery from 'components/ImageGallery';\nimport Button from 'components/Button';\nimport Modal from 'components/Modal';\nimport Spinner from 'components/Spinner';\n\nconst Status = {\n  IDLE: 'idle',\n  PENDING: 'pending',\n  RESOLVED: 'resolved',\n  REJECTED: 'rejected',\n};\n\nexport default function App () {\n  const[status,setStatus] = useState(Status.IDLE);\n  const[query,setQuery] = useState('');\n  const[page,setPage] = useState(1);\n  const[imageArr,setImageArr] = useState([]);\n  const[modalLargeImage, setModalLargeImage] = useState('');\n  const[showModal,setShowModal] = useState(false);\n  \nuseEffect(() => {\n if(!query){\n   return\n }\n    setStatus(Status.PENDING );\n      fetchApi(query, page)\n      .then(data => data.hits)\n      .then(data => {\n        setImageArr([...imageArr,...data]);\n        setStatus(Status.RESOLVED)\n          if(page!==1) {\n            window.scrollTo({\n            top: document.documentElement.scrollHeight,\n            behavior: 'smooth',\n          })\n        }\n      });\n},[page,query])\n\nconst handleFormSubmit = query =>{\n  setQuery(query);\n  setPage (1);\n  setImageArr([]);\n};\n\nconst buttonLoadMore = () => {\n    setPage (page + 1);\n    setStatus(Status.PENDING)\n};\n\nconst toggleModal = () => {\n  setShowModal(!showModal)\n};\n\nconst modalImage = (id, img, tags) => {\n  setModalLargeImage({ id: id, img: img, tags: tags })\n};\n\n    return (\n      <Container>\n        <Searchbar onSubmit={handleFormSubmit} />\n        <ImageGallery\n          data={imageArr}\n          toggleModal={toggleModal}\n          bigImage={modalImage}\n        />\n        {status === Status.PENDING && <Spinner />}\n        {imageArr.length > 0 && <Button onClick={buttonLoadMore} />}\n        {showModal && <Modal closeModal={toggleModal} modalImage={modalLargeImage} />}\n        <ToastContainer autoClose={2000}/>\n        </Container>\n    );\n }\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport \"./index.module.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.querySelector('#root'),\n);\n"],"sourceRoot":""}